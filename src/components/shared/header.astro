---
import { Image } from 'astro:assets';
---

<section
  class="top-nav bg-[var(--nav-color)] flex flex-row items-center justify-between text-white h-[90px] p-[0.7rem]"
>
  <div class="flex flex-row items-center justify-center">
    <a href="/">
      <Image
        src="/icon.webp"
        width="96"
        height="96"
        alt="TeaClient Logo"
        loading="eager"
        id="logo"
      />
    </a>
    <a href="/" class="text-white hover:text-purple-600">Tea Client</a>
  </div>
  <input id="menu-toggle" class="hidden" type="checkbox" />
  <label
    class="menu-button-container hidden max-sm:flex h-[100%] w-[30px] justify-center flex-col cursor-pointer items-center"
    for="menu-toggle"
  >
    <div class="menu-button before:mt-[-8px] after:mt-[8px]"></div>
  </label>
  <ul class="menu flex flex-row list-none m-0 p-0 *:mx-4 *:overflow-hidden">
    <li>
      <input type="checkbox" class="absolute opacity-0" id="checkbox" />
      <label for="checkbox" class="checkbox-label bg-[#2e2e2e] w-[50px] h-[26px] rounded-[50px] relative p-[5px] cursor-pointer flex justify-between items-center" aria-label="Toggle theme">
        <i class="fas text-[f1c40f]"></i>
        <i class="fas text-[#f39c12]"></i>
        <span class="ball"></span>
        <span
          class="sr-only absolute w-[1px] h-[1px] p-0 m-[-1px] overflow-hidden border-0"
          >Toggle theme</span
        >
      </label>
    </li>
    <li><a href="/">HOME</a></li>
    <li><a href="/store">STORE</a></li>
    <li><a href="/docs">DOCS</a></li>
    <li><button>DOWNLOAD</button></li>
  </ul>
</section>

<div class="page-background">
  <img
    class="fixed top-0 left-0 w-full h-full object-cover object-center -z-10 pointer-events-none [-webkit-user-drag: none] select-none"
    id="background-image"
    src="background/1.webp"
    alt="The background"
    loading="lazy"
    decoding="async"
  />
</div>

<script>
  const button = document.querySelector('.checkbox') as HTMLInputElement;

  function switchTheme() {
    const currentTheme = document.documentElement.getAttribute('data-theme');
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    document.documentElement.setAttribute('data-theme', newTheme);
    localStorage.setItem('theme', newTheme);
    button.checked = newTheme === 'dark';
  }

  function setRandomBackgroundImage() {
    const images = ['/background/1.webp'];
    const randomImage = images[Math.floor(Math.random() * images.length)];
    (document.getElementById('background-image') as HTMLImageElement).src =
      randomImage;
  }

  document.addEventListener('DOMContentLoaded', event => {
    const currentTheme = localStorage.getItem('theme');
    if (currentTheme) {
      document.documentElement.setAttribute('data-theme', currentTheme);
      button.checked = currentTheme === 'dark';
    } else {
      document.documentElement.setAttribute('data-theme', 'dark');
      localStorage.setItem('theme', 'dark');
      button.checked = true;
    }
    setRandomBackgroundImage();
  });

  button.addEventListener('click', switchTheme);
</script>

<style>
  /* Mobile Button */
  .menu-button,
  .menu-button::before,
  .menu-button::after {
    @apply block absolute h-[4px] w-[30px] rounded-sm bg-white;
    transition: transform 400ms cubic-bezier(0.23, 1, 0.32, 1);
  }

  .menu-button::before {
    content: '';
  }

  #menu-toggle:checked + .menu-button-container .menu-button::after {
    @apply mt-0 rotate-[-405deg];
  }

  @media (max-width: 1400px) {
    .menu-button-container {
      @apply flex;
    }
    .menu {
      @apply absolute top-0 mt-[90px] left-0 flex-col w-[100%] justify-center items-center;
    }
    #menu-toggle ~ .menu li {
      @apply h-0 m-0 p-0;
      transition: height 400ms cubic-bezier(0.23, 1, 0.32, 1);
    }

    #menu-toggle:checked ~ .menu li {
      height: 2.5em;
      padding: 0.5em;
      transition: height 400ms cubic-bezier(0.23, 1, 0.32, 1);
    }
    .menu > li {
      @apply flex justify-center m-0 w-full text-white backdrop-blur-[10px] bg-[var(--nav-color)];
    }

    #menu-toggle:checked ~ .menu > li a {
      @apply text-black bg-[#0000001a];
      &:hover {
        @apply bg-[#0000006a] text-white;
      }
    }


  }

  li {
    @apply list-none inline-block p-[8px_12px] relative;
  }

  .menu li a {
    @apply text-[var(--navBar-Items)] no-underline font-bold;
    font-size: 1.1rem;

    &:hover {
      @apply text-[var(--hover-color)] no-underline font-bold;
    }
  }

  .menu li button {
    @apply text-white bg-[#6e2becab] no-underline font-bold hover:text-white hover:bg-[var(--hover-color)];
    font-size: 1.1rem;
  }


  .checkbox-label .ball {
    @apply absolute left-[2px] top-[2px] rounded-[50%] bg-orange-400 aspect-square w-[22px] drop-shadow-[0px_0px_4px_yellow];
    transition: transform 0.2s linear;
  }

  .checkbox:checked + .checkbox-label .ball {
    @apply bg-[#101010] drop-shadow-[0px_0px_4px_white];
    transform: translateX(24px);
  }
</style>
